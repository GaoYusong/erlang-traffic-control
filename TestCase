{ok, Pid} = tokens_queue_manager:new_tokens_queue(),
demo_worker:start(100000000, Pid),
tokens_queue:infos(Pid).

1.

Input:

tokens_queue:set_max_cps_cast(Pid, 100),
tokens_queue:infos(Pid).                

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,50},
 {add_tokens_interval,20},
 {start_time,1362666733642},
 {set_add_tokens_total,50},
 {set_add_tokens_interval,20},
 {total_tokens_r_count,40},
 {total_tokens_reminder,0},
 {total_tokens_base,2},
 {max_cps,100},
 {total_tokens,2},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666732522},
 {cps_count,113},
 {cps,100.0}]

2.

Input:

tokens_queue:set_max_cps_cast(Pid, 10),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,10},
 {add_tokens_interval,100},
 {start_time,1362666764142},
 {set_add_tokens_total,10},
 {set_add_tokens_interval,100},
 {total_tokens_r_count,3},
 {total_tokens_reminder,0},
 {total_tokens_base,1},
 {max_cps,10},
 {total_tokens,1},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666762542},
 {cps_count,17},
 {cps,10.0}]

3.

Input:

tokens_queue:set_max_cps_cast(Pid, 5),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,5},
 {add_tokens_interval,200},
 {start_time,1362666794942},
 {set_add_tokens_total,5},
 {set_add_tokens_interval,200},
 {total_tokens_r_count,3},
 {total_tokens_reminder,0},
 {total_tokens_base,1},
 {max_cps,5},
 {total_tokens,1},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666794542},
 {cps_count,3},
 {cps,5.0}]

4.

Input:

tokens_queue:set_max_cps_cast(Pid, 1),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,1},
 {add_tokens_interval,1000},
 {start_time,1362666818742},
 {set_add_tokens_total,1},
 {set_add_tokens_interval,1000},
 {total_tokens_r_count,1},
 {total_tokens_reminder,0},
 {total_tokens_base,1},
 {max_cps,1},
 {total_tokens,1},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666818742},
 {cps_count,1},
 {cps,1.0}]

5.

Input:

tokens_queue:set_max_cps_cast(Pid, 0),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,1},
 {add_tokens_interval,1000},
 {start_time,1362666877742},
 {set_add_tokens_total,1},
 {set_add_tokens_interval,1000},
 {total_tokens_r_count,1},
 {total_tokens_reminder,0},
 {total_tokens_base,0},
 {max_cps,0},
 {total_tokens,0},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666876742},
 {cps_count,2},
 {cps,1.0}]

6.

Input:

tokens_queue:set_max_cps_cast(Pid, 109),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,50},
 {add_tokens_interval,20},
 {start_time,1362666897162},
 {set_add_tokens_total,50},
 {set_add_tokens_interval,20},
 {total_tokens_r_count,22},
 {total_tokens_reminder,9},
 {total_tokens_base,2},
 {max_cps,109},
 {total_tokens,2},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666896742},
 {cps_count,52},
 {cps,109.0}]

7.

Input:

tokens_queue:set_max_cps_cast(Pid, 7),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,5},
 {add_tokens_interval,200},
 {start_time,1362666919922},
 {set_add_tokens_total,5},
 {set_add_tokens_interval,200},
 {total_tokens_r_count,2},
 {total_tokens_reminder,2},
 {total_tokens_base,1},
 {max_cps,7},
 {total_tokens,2},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666918922},
 {cps_count,8},
 {cps,7.0}]
8.

Input:

tokens_queue:set_max_cps_cast(Pid, 3),
tokens_queue:infos(Pid).

Output:

[{do_request_tokens_exception,undefined},
 {callback_function,#Fun<tokens_queue.0.40847612>},
 {add_tokens_total,1},
 {add_tokens_interval,1000},
 {start_time,1362666940322},
 {set_add_tokens_total,1},
 {set_add_tokens_interval,1000},
 {total_tokens_r_count,1},
 {total_tokens_reminder,0},
 {total_tokens_base,3},
 {max_cps,3},
 {total_tokens,3},
 {count,1},
 {count_cps_interval,2000},
 {cps_start_time,1362666939322},
 {cps_count,4},
 {cps,3.0}]



{ok, Pid} = tokens_queue_manager:new_tokens_queue(),
demo_worker:start_with_callback(100000000, Pid),
tokens_queue:infos(Pid),
erlang:process_info(Pid, message_queue_len).
